(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"/*\nhtml5doctor.com Reset Stylesheet\nv1.6.1\nLast Updated: 2010-09-17\nAuthor: Richard Clark - http://richclarkdesign.com\nTwitter: @rich_clark\n*/\n\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n    margin:0;\n    padding:0;\n    border:0;\n    outline:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\nbody {\n    line-height:1;\n}\n\narticle,aside,details,figcaption,figure,\nfooter,header,hgroup,menu,nav,section {\n    display:block;\n}\n\nnav ul {\n    list-style:none;\n}\n\nblockquote, q {\n    quotes:none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n    content:'';\n    content:none;\n}\n\na {\n    margin:0;\n    padding:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\n/* change colours to suit your needs */\nins {\n    background-color:#ff9;\n    color:#000;\n    text-decoration:none;\n}\n\n/* change colours to suit your needs */\nmark {\n    background-color:#ff9;\n    color:#000;\n    font-style:italic;\n    font-weight:bold;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n    border-bottom:1px dotted;\n    cursor:help;\n}\n\ntable {\n    border-collapse:collapse;\n    border-spacing:0;\n}\n\n/* change border colour to suit your needs */\nhr {\n    display:block;\n    height:1px;\n    border:0;  \n    border-top:1px solid #cccccc;\n    margin:1em 0;\n    padding:0;\n}\n\ninput, select {\n    vertical-align:middle;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;;;;CAMC;;AAED;;;;;;;;;;;;IAYI,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;;IAEI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,oBAAoB;AACxB;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,wBAAwB;IACxB,WAAW;AACf;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;AACpB;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,QAAQ;IACR,4BAA4B;IAC5B,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/*\nhtml5doctor.com Reset Stylesheet\nv1.6.1\nLast Updated: 2010-09-17\nAuthor: Richard Clark - http://richclarkdesign.com\nTwitter: @rich_clark\n*/\n\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n    margin:0;\n    padding:0;\n    border:0;\n    outline:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\nbody {\n    line-height:1;\n}\n\narticle,aside,details,figcaption,figure,\nfooter,header,hgroup,menu,nav,section {\n    display:block;\n}\n\nnav ul {\n    list-style:none;\n}\n\nblockquote, q {\n    quotes:none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n    content:'';\n    content:none;\n}\n\na {\n    margin:0;\n    padding:0;\n    font-size:100%;\n    vertical-align:baseline;\n    background:transparent;\n}\n\n/* change colours to suit your needs */\nins {\n    background-color:#ff9;\n    color:#000;\n    text-decoration:none;\n}\n\n/* change colours to suit your needs */\nmark {\n    background-color:#ff9;\n    color:#000;\n    font-style:italic;\n    font-weight:bold;\n}\n\ndel {\n    text-decoration: line-through;\n}\n\nabbr[title], dfn[title] {\n    border-bottom:1px dotted;\n    cursor:help;\n}\n\ntable {\n    border-collapse:collapse;\n    border-spacing:0;\n}\n\n/* change border colour to suit your needs */\nhr {\n    display:block;\n    height:1px;\n    border:0;  \n    border-top:1px solid #cccccc;\n    margin:1em 0;\n    padding:0;\n}\n\ninput, select {\n    vertical-align:middle;\n}"],sourceRoot:""}]);const s=i},426:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"html {\n    background-color: rgb(25, 25, 65);\n}\n\n#content {\n    position: fixed;\n    color: white;\n    min-width: 210px;\n}\n\n.menuLogo {\n    border: 3px outset rgb(23, 107, 146);\n    background-color: rgb(0, 33, 122);\n    border-radius: 12px;\n    width: 48px;\n    max-height: 48px;\n}\n\n.mobileMenu {\n    text-align: center;\n    min-width: 210px;\n}\n\na {\n    color: white;\n    font-family: 'Courier New', Courier, monospace;\n}\n\n\n\n.menuItem, .lastMenuItem, .moreMenu, .moreMenuItem {\n    padding-top: 16px;\n    text-decoration: none;\n    border: 3px outset rgb(23, 107, 146);\n    height: 32px;\n    width: 150px;\n    background-color: rgb(0, 33, 122);\n    border-radius: 12px;\n\n}\n\n.moreItemsContainer {\n    position: relative;\n}\n\n.moreMenuItem {\n    position: absolute;\n}\n\n.testing {\n    padding-top: 2000px;\n}\n\n.flexContainer {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: center;\n}\n\n.moreTabContainer {\n    display: flex;\n    flex-direction: column;\n    /* background-color: grey; */\n\n}\n\n.moreTabHidden {\n    display: none;\n}\n\n.moreTabShow {\n    display: block;\n}\n\na:hover {\n    background-color: rgb(71, 104, 194);\n}\n\na:active {\n    background-color: green;\n    border: 3px inset rgb(0, 51, 75)\n}\n\n\n@media screen and (max-width: 300px) {\n    .flexContainer {\n        justify-content: space-between;\n    }\n    \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,iCAAiC;AACrC;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;IACpC,iCAAiC;IACjC,mBAAmB;IACnB,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,8CAA8C;AAClD;;;;AAIA;IACI,iBAAiB;IACjB,qBAAqB;IACrB,oCAAoC;IACpC,YAAY;IACZ,YAAY;IACZ,iCAAiC;IACjC,mBAAmB;;AAEvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,4BAA4B;;AAEhC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,uBAAuB;IACvB;AACJ;;;AAGA;IACI;QACI,8BAA8B;IAClC;;AAEJ",sourcesContent:["html {\n    background-color: rgb(25, 25, 65);\n}\n\n#content {\n    position: fixed;\n    color: white;\n    min-width: 210px;\n}\n\n.menuLogo {\n    border: 3px outset rgb(23, 107, 146);\n    background-color: rgb(0, 33, 122);\n    border-radius: 12px;\n    width: 48px;\n    max-height: 48px;\n}\n\n.mobileMenu {\n    text-align: center;\n    min-width: 210px;\n}\n\na {\n    color: white;\n    font-family: 'Courier New', Courier, monospace;\n}\n\n\n\n.menuItem, .lastMenuItem, .moreMenu, .moreMenuItem {\n    padding-top: 16px;\n    text-decoration: none;\n    border: 3px outset rgb(23, 107, 146);\n    height: 32px;\n    width: 150px;\n    background-color: rgb(0, 33, 122);\n    border-radius: 12px;\n\n}\n\n.moreItemsContainer {\n    position: relative;\n}\n\n.moreMenuItem {\n    position: absolute;\n}\n\n.testing {\n    padding-top: 2000px;\n}\n\n.flexContainer {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: center;\n}\n\n.moreTabContainer {\n    display: flex;\n    flex-direction: column;\n    /* background-color: grey; */\n\n}\n\n.moreTabHidden {\n    display: none;\n}\n\n.moreTabShow {\n    display: block;\n}\n\na:hover {\n    background-color: rgb(71, 104, 194);\n}\n\na:active {\n    background-color: green;\n    border: 3px inset rgb(0, 51, 75)\n}\n\n\n@media screen and (max-width: 300px) {\n    .flexContainer {\n        justify-content: space-between;\n    }\n    \n}"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=o.base?c[0]+o.base:c[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=o(n,r),A=0;A<a.length;A++){var d=t(a[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},225:(n,e,t)=>{n.exports=t.p+"a1c883220f20e58a3bae.png"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.p="./",(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),s=t(565),c=t.n(s),A=t(216),d=t.n(A),l=t(589),u=t.n(l),p=t(917),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var C=t(426),b={};b.styleTagTransform=u(),b.setAttributes=c(),b.insert=i().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=d(),e()(C.Z,b);const h=C.Z&&C.Z.locals?C.Z.locals:void 0;var f=t(225);console.log(h),(()=>{console.log("TESTING: KPINC425");const n=document.querySelector(".mobileMenu");n.innterHTML="";const e=function(){const n=document.createElement("nav");n.classList.add("flexContainer");const e=document.createElement("div");e.classList.add("moreTabContainer"),e.classList.add("moreTabHidden");const t=document.createElement("div");t.classList.add("containerShownTabs"),t.classList.add("flexContainer");const o=document.createElement("img");o.setAttribute("src",f),o.setAttribute("alt","iLG Menu Logo"),o.classList.add("menuLogo");const r=document.createElement("a");r.setAttribute("href","#"),r.classList.add("menuItem"),r.textContent="Home";const a=document.createElement("a");a.setAttribute("href","#"),a.classList.add("menuItem"),a.textContent="Page2";const i=document.createElement("a");i.setAttribute("href","#"),i.classList.add("menuItem"),i.textContent="Page3";const s=document.createElement("a");s.setAttribute("href","#"),s.classList.add("menuItem"),s.textContent="Page4";const c=document.createElement("a");c.setAttribute("href","#"),c.classList.add("menuItem"),c.textContent="Page5";const A=document.createElement("a");return A.setAttribute("href","#"),A.classList.add("moreMenu"),A.textContent="More",n.appendChild(o),t.appendChild(r),t.appendChild(a),t.appendChild(i),t.appendChild(s),t.appendChild(c),n.appendChild(t),e.appendChild(A),n.appendChild(e),n}();console.log(e),n.appendChild(e),(()=>{const n=document.querySelector(".moreTabContainer");console.log(n),n.addEventListener("click",(()=>{let e=0;n.querySelectorAll(".moreMenuItem").forEach((n=>{if(n.classList.contains("moreTabHidden")){n.classList.remove("moreTabHidden");let t=n.offsetHeight+e;n.style.top=t+"px",e=t}else n.classList.add("moreTabHidden")}))}))})(),(()=>{let n,e,t,o=document.getElementById("content"),r=document.querySelector(".moreTabContainer"),a=document.querySelector(".containerShownTabs"),i=document.querySelector(".windowWidth"),s=document.querySelector(".windowHeight"),c=n=1005;const A=()=>{if(i.textContent=`Width: ${window.outerWidth}`,s.textContent=`Height: ${window.innerHeight}`,window.outerWidth<c){console.log(`smaller than ${c}`);const n=()=>{e=document.querySelector(".menuItem:last-of-type"),e.classList.remove("menuItem"),e.remove(),e.classList.add("moreMenuItem"),e.classList.add("moreTabHidden"),r.appendChild(e),r.classList.remove("moreTabHidden")};if(null===e)return 0;{console.log(((c-window.outerWidth)/150).toFixed(0));let e=((c-window.outerWidth)/150).toFixed(0);if(e>0)for(let t=0;t<e;t++)c-=150,n(),console.log(c)}}if(window.outerWidth>c+150){t=document.querySelector(".moreMenuItem:last-of-type");const n=()=>{t.classList.remove("moreMenuItem"),t.classList.remove("moreTabHidden"),t.classList.add("menuItem"),a.appendChild(t),window.outerWidth>1005&&r.classList.add("moreTabHidden")};if(null===t)return 0;c+=150,n()}};window.addEventListener("resize",A),window.onload=A,o.appendChild(i),o.appendChild(s)})()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,